#!/usr/bin/env perl
# RZ, March 2020

use warnings;

my $small = 1e-12; # too small to be considered
my $epsilon = 1e-5; # maximal relative error allowed

my $what = shift;
defined($what) or die "Syntax: compare <filename>.";
-e $what or die "$what not found.";

my $ref = $what . ".ref";
-e $ref or die "$ref not found.";

#for the middle_notMiddle test, which passes another argument:
my $second_argument = shift;

open(A, "<", $what) or die;
open(B, "<", $ref) or die;

# skip to results
while (<A>) {
  last if (/RESULTS/);
}

while (<B>) {
  last if (/RESULTS/);
}

while (<A>) {
  chomp($a = $_);
  chomp($b = <B>);

  next if (($a =~ /occupancies/ or $a =~ /amplitudes/ ) and defined($second_argument)); #if the test is middle_notMiddle, do not compare occupancies and amplitudes 	
  next if ($a =~ /sqrt/); # these lines lead to false positives, ignore them
  next if ($a eq $b); # equal as strings, ok
  # extract first floating-point number after equality sign
  $a =~ /=\s*([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)/ or next; # skip this line if not found
  $x = $1;
  $b =~ /=\s*([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)/ or next; # -||-
  $y = $1;
  next if (abs($x) < $small) || (abs($y) < $small); # ignore small numbers
  $absdiff = abs($x-$y);
  $scale = abs($x);
  $reldiff = $absdiff/$scale;
  next if ($reldiff < $epsilon); # small relative difference
  print "a:$a\nb:$b\n";
  print "ERROR: x=$x y=$y absdiff=$absdiff reldiff=$reldiff\n";
  exit(1); # FAILURE
}

exit(0); # SUCCESS
